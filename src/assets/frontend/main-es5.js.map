{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/modules/auth/auth.module.ts","webpack:///./src/app/modules/auth/components/login/login.component.html","webpack:///./src/app/modules/auth/components/login/login.component.ts","webpack:///./src/app/modules/auth/guard/logged-in.guard.ts","webpack:///./src/app/modules/auth/guard/not-logged-in.guard.ts","webpack:///./src/app/modules/auth/model/user.ts","webpack:///./src/app/modules/auth/services/auth.service.ts","webpack:///./src/app/modules/auth/services/user.service.ts","webpack:///./src/app/modules/core/components/base.component.ts","webpack:///./src/app/modules/core/components/loader/index.ts","webpack:///./src/app/modules/core/components/loader/loader.component.ts","webpack:///./src/app/modules/core/components/loader/loader.service.ts","webpack:///./src/app/modules/core/config/service-info.ts","webpack:///./src/app/modules/core/core.module.ts","webpack:///./src/app/modules/core/http-interceptors/loading-interceptor.ts","webpack:///./src/app/modules/core/http-interceptors/service-interceptor.ts","webpack:///./src/app/modules/core/model/service.ts","webpack:///./src/app/modules/core/validators/err-text/err-text.component.html","webpack:///./src/app/modules/core/validators/err-text/err-text.component.ts","webpack:///./src/app/modules/core/validators/validation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./modules/featured/appointments/appointments.module.ngfactory\": [\n\t\t\"./src/app/modules/featured/appointments/appointments.module.ngfactory.js\",\n\t\t\"modules-featured-appointments-appointments-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","<!-- <mvp-loader></mvp-loader>\r\n<ng-template [ngIf]=\"!isloggedIn\">\r\n  <div class=\"container-fluid\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</ng-template>\r\n<ng-template [ngIf]=\"isloggedIn\">\r\n  <mvp-header></mvp-header>\r\n  <div class=\"container mt-5 mb-5\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <mvp-footer></mvp-footer>\r\n</ng-template> -->\r\n<form class=\"form-signin col-12\"  [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\r\n    <div class=\"form-group\">\r\n      <label for=\"caller\">caller</label>\r\n      <input type=\"text\" id=\"caller\" name=\"caller\" class=\"form-control\" formControlName=\"caller\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"attendee\">attendee</label>\r\n      <input type=\"text\" id=\"attendee\" class=\"form-control\" name=\"attendee\" formControlName=\"attendee\" required>\r\n    </div>\r\n    <button class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\r\n    <p class=\"py-3 text-muted text-center\">&copy; 2019-2020</p>\r\n  </form>\r\n<video id=\"main_video\" class=\"frames__main_v qb-video_source\" autoplay playsinline></video>\r\n<button type=\"button\" (click)=\"call()\">call</button>\r\n","import { AuthService } from './modules/auth/services/auth.service';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n/**\r\n * To integrate QB available\r\n */\r\ndeclare var QB: any;\r\ndeclare var window: any;\r\n@Component({\r\n  selector: 'mvp-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n  isloggedIn;\r\n  CONFIG = {\r\n    CREDENTIALS: {\r\n        'appId': 77794,\r\n        'authKey': 'krOUACbfyenPHbC',\r\n        'authSecret': 'gsBkRHhL2eVgWMq'\r\n    },\r\n    APP_CONFIG: {\r\n      debug: true,\r\n      webrtc: {\r\n          answerTimeInterval: 30,\r\n          dialingTimeInterval: 5,\r\n          disconnectTimeInterval: 35,\r\n          statsReportTimeInterval: 5\r\n      }\r\n  },\r\n  };\r\n  form = this._fb.group({\r\n    caller: '',\r\n    attendee: ''\r\n  })\r\n\r\n  constructor(private _auth:AuthService, private _fb: FormBuilder){\r\n    this._auth.isloggedIn.subscribe((isloggedIn) => {\r\n      this.isloggedIn = isloggedIn;\r\n    });\r\n    this._initQBSession();\r\n\r\n  }\r\n\r\n  private _initQBSession() {\r\n    QB.init(\r\n      this.CONFIG.CREDENTIALS.appId,\r\n      this.CONFIG.CREDENTIALS.authKey,\r\n      this.CONFIG.CREDENTIALS.authSecret,\r\n      this. CONFIG.APP_CONFIG\r\n  );\r\n  }\r\n\r\n  onSubmit () {\r\n    var calleesIds = [this.form.value.attendee]; // User's ids\r\n    var sessionType = QB.webrtc.CallType.VIDEO; // AUDIO is also possible\r\n    var callerID = this.form.value.caller; // Your user ID (optional, will be defined from chat connection)\r\n    var additionalOptions = {\"bandwith\": 512}; // The video bandwith (number, optional, 0 = unlimited)\r\n    QB.chat.connect({userId: this.form.value.caller, password: \"quickblox\"}, function(err, roster) {\r\n      if(err){\r\n        console.log(err);\r\n      }else{\r\n\r\n      }\r\n    });\r\n    window.session = QB.webrtc.createNewSession(calleesIds, sessionType, callerID, additionalOptions);\r\n    var mediaParams = {\r\n      audio: true,\r\n      video: true,\r\n      options: {\r\n        muted: true,\r\n        mirror: true\r\n      },\r\n      elemId: 'main_video'\r\n    };\r\n\r\n    window.session.getUserMedia(mediaParams, function(err, stream) {\r\n      if (err){\r\n        console.log(err)\r\n      }else{\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  call() {\r\n    window.session.call({}, function(error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './modules/core/core.module';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\n\r\nimport { AuthModule } from './modules/auth/auth.module';\r\nimport { AppRoutingModule } from './app.routing';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, DashboardComponent, ChatComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    AuthModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LoggedInGuard } from './modules/auth/guard/logged-in.guard';\r\nimport { LoginComponent } from './modules/auth/components/login/login.component';\r\nimport { NotLoggedInGuard } from './modules/auth/guard/not-logged-in.guard';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    canActivate: [LoggedInGuard]\r\n  },\r\n  {\r\n    path: 'chat',\r\n    component: ChatComponent,\r\n    canActivate: [LoggedInGuard]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [NotLoggedInGuard]\r\n  },\r\n  {\r\n    path: 'appointments',\r\n    loadChildren: './modules/featured/appointments/appointments.module#AppointmentsModule',\r\n    canActivate: [LoggedInGuard]\r\n  },\r\n  // {\r\n  //   path: '**',\r\n  //   redirectTo: '/login'\r\n  // },\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      initialNavigation: 'enabled',\r\n      useHash: true\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div class=\"row\">\r\n  <div class=\"col-12 col-md-3\">\r\n    <div class=\"text-center p-3 border d-none d-md-block\">\r\n      <p>Talk to therapist about depression</p>\r\n      <div class=\"pb-5\">\r\n        <i class=\"fas fa-user-md fa-8x fas-primary\"></i>\r\n      </div>\r\n      <button class=\"btn btn-primary\">Talk to a Therapist</button>\r\n    </div>\r\n    <a href=\"javascript:void(0)\" class=\"text-right d-block d-md-none\">Talk <i class=\"fas fa-user-md\"></i></a>\r\n  </div>\r\n  <div class=\"col-12 col-md-9\">\r\n    <div class=\"rounded border ml-md-5 mt-5 mt-md-0\">\r\n      <p class=\"border-bottom p-3\">\r\n        <i class=\"fas fa-user-md\"></i>\r\n        Test User\r\n      </p>\r\n      <p style=\"min-height: 500px\"></p>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mvp-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"card bg-light mb-3\">\r\n  <div class=\"card-header\">\r\n    <h4 class=\"card-title\">Hello, {{ user.fullName }}</h4>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <p class=\"card-text\">Let's write a little story about why we want to start our patient to initiate a chat</p>\r\n    <hr class=\"my-2 mb-4\">\r\n    <p class=\"lead p-0 m-0\">\r\n      <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Let's Connect</a>\r\n    </p>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"jumbotron py-4\">\r\n  <h3 class=\"display-6\">Hello, {{ user.fullName }}</h3>\r\n  <p class=\"lead\">You have an upcoming virtual connect with your\r\n    <span class=\"font-weight-bold\">Dr.Thomas </span>\r\n    <span class=\"font-weight-light\">@</span>\r\n    <span class=\"font-weight-bold\">11:00 AM</span>\r\n  </p>\r\n  <hr class=\"my-4\">\r\n  <p class=\"lead\">\r\n    <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Let's Connect</a>\r\n  </p>\r\n</div>\r\n<div class=\"jumbotron py-4\">\r\n  <h3 class=\"display-6 text-center\">Benefits of your plan</h3>\r\n  <hr class=\"my-4\">\r\n  <p class=\"lead\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard\r\n    dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen\r\n    book.\r\n  </p>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\" col-12 col-md-4\">\r\n    <div class=\"card text-white bg-primary mb-3\">\r\n      <div class=\"card-header\">\r\n        <h4 class=\"card-title\">\r\n          <i class=\"fas fa-calendar-alt pr-2 \"></i> Feature One</h4>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\" col-12 col-md-4\">\r\n    <div class=\"card text-white bg-primary mb-3\">\r\n      <div class=\"card-header\">\r\n        <h4 class=\"card-title\">\r\n          <i class=\"fas fa-user-md pr-2 \"></i> Feature two</h4>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\" col-12 col-md-4\">\r\n    <div class=\"card text-white bg-primary mb-3\">\r\n      <div class=\"card-header\">\r\n        <h4 class=\"card-title\">\r\n          <i class=\"fas fa-ambulance pr-2 \"></i> Feature three</h4>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { User } from './../../modules/auth/model/user';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../modules/auth/services/user.service';\r\n\r\n@Component({\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  user :User\r\n  constructor(private _user: UserService) {\r\n    this.user = this._user.user;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { AuthService } from './services/auth.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoggedInGuard } from './guard/logged-in.guard';\nimport { NotLoggedInGuard } from './guard/not-logged-in.guard';\nimport { CoreModule } from '../core/core.module';\nimport { UserService } from './services/user.service';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    CoreModule\n  ],\n  providers: [AuthService, LoggedInGuard, NotLoggedInGuard, UserService]\n})\nexport class AuthModule { }\n","<div class=\"row login-bg\">\r\n  <div class=\"anim first\">\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n      viewBox=\"0 0 500 200\" style=\"enable-background:new 0 0 500 200;\" xml:space=\"preserve\">\r\n      <g>\r\n        <polyline class=\"ekg\" points=\"486.6,113.8 328.2,113.8 310.3,132.3 296,70.7 246.8,127.4 241.6,120.2 233.9,166.4 227,27.6\r\n                  213.2,118.3 211.8,112.3 205.1,126.1 198.2,108.5 194.1,124.4 184.5,92.9 174.1,113 4.3,113 \t\" />\r\n      </g>\r\n    </svg>\r\n  </div>\r\n  <div class=\"anim last\">\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n      viewBox=\"0 0 500 200\" style=\"enable-background:new 0 0 500 200;\" xml:space=\"preserve\">\r\n      <g>\r\n        <polyline class=\"ekg\" points=\"486.6,113.8 328.2,113.8 310.3,132.3 296,70.7 246.8,127.4 241.6,120.2 233.9,166.4 227,27.6\r\n                      213.2,118.3 211.8,112.3 205.1,126.1 198.2,108.5 194.1,124.4 184.5,92.9 174.1,113 4.3,113 \t\" />\r\n      </g>\r\n    </svg>\r\n  </div>\r\n  <div>\r\n    <form class=\"form-signin col-12\"  [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\r\n      <div class=\"text-center py-3 px-md-4\">\r\n        <img src=\"./assets/images/logo.png\" alt=\"\" height=\"75\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" id=\"username\" name=\"username\" class=\"form-control\" formControlName=\"username\" placeholder=\"Username\" required>\r\n        <mvp-err-text [control]=\"authForm.controls.username\" [submitted]=\"formSubmitAttempt\"></mvp-err-text>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" class=\"form-control\" name=\"password\" formControlName=\"password\" placeholder=\"Password\" required>\r\n        <mvp-err-text [control]=\"authForm.controls.password\" [submitted]=\"formSubmitAttempt\"></mvp-err-text>\r\n      </div>\r\n      <div class=\"form-group mb-5\">\r\n        <label for=\"userType\">Login As</label>\r\n        <select class=\"form-control\" id=\"userType\" name=\"userType\" formControlName=\"userType\">\r\n          <option *ngFor=\"let eachType of userTypes| keyvalue\"  [value]=\"eachType.value\">{{ eachType.key }}</option>\r\n        </select>\r\n        <mvp-err-text [control]=\"authForm.controls.userType\" [submitted]=\"formSubmitAttempt\"></mvp-err-text>\r\n      </div>\r\n      <button class=\"btn btn-lg btn-primary btn-block\">Sign in</button>\r\n      <p class=\"py-3 text-muted text-center\">&copy; 2019-2020</p>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { UserType } from './../../model/user';\nimport { AuthService } from './../../services/auth.service';\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { BaseComponent } from '../../../core/components/base.component';\n\n@Component({\n  selector: 'mvp-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseComponent {\n  userTypes = UserType;\n  formName = 'authForm';\n  authForm = this._fb.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required],\n    userType: [UserType.PATIENTS, Validators.required]\n  })\n\n  constructor(private _auth: AuthService, private _fb: FormBuilder) {\n    super();\n  }\n\n  save() {\n    this._auth.logIn(this.authForm.value).subscribe((res) => {\n      console.log(res);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n}\n","import { AuthService } from './../services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LoggedInGuard implements CanActivate {\n  isLoggedIn:boolean;\n  constructor(private _auth:AuthService, private _routes: Router) {\n    this._auth.isloggedIn.subscribe((data) => {\n      this.isLoggedIn = data;\n    })\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(!this.isLoggedIn) {\n      this._routes.navigate(['login']);\n    }\n    return this.isLoggedIn;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class NotLoggedInGuard implements CanActivate {\n  isLoggedIn:boolean;\n  constructor(private _auth:AuthService, private _routes: Router) {\n    this._auth.isloggedIn.subscribe((data) => {\n      this.isLoggedIn = data;\n    })\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(this.isLoggedIn) {\n      this._routes.navigate(['dashboard']);\n    }\n    return !this.isLoggedIn;\n  }\n\n}\n","import { Deserializable } from '../../core/model/deserialize';\r\n\r\nexport enum UserType {\r\n  PATIENTS  = 'patients',\r\n  COUNSELLOR = 'counsellor',\r\n  DOCTOR = 'doctor'\r\n}\r\n\r\nexport interface IAuthPayload {\r\n  username: string;\r\n  password: string;\r\n  userType: UserType;\r\n}\r\n\r\nexport class User implements Deserializable{\r\n  isSpecialUser: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  age: string;\r\n  emailID: string;\r\n  userID: string;\r\n  planInfo: string;\r\n  deviceID: string;\r\n  videoID: string;\r\n\r\n  get fullName() {\r\n    return this.firstName+ ' '+ this.lastName;\r\n  }\r\n\r\n  deserialize(input: any) {\r\n    Object.assign(this, input);\r\n    return this;\r\n  }\r\n}\r\n","import { IAuthPayload, User } from './../model/user';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { SERVICE_NAME } from '../../core/model/service';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class AuthService {\n  isloggedIn = new BehaviorSubject<boolean>(this._user.isLoggedIn || false);\n\n  constructor(private _routes: Router, private _http: HttpClient, private _user: UserService) { }\n\n  logIn(payload: IAuthPayload) {\n    return this._http.post(SERVICE_NAME.AUTHENTICATE_USER, payload).pipe(\n      tap((response:User) => {\n        this._user.loggedIn(response);\n        this.isloggedIn.next(this._user.isLoggedIn);\n        this._routes.navigate(['dashboard']);\n      }));\n  }\n\n  logOut() {\n    this._user.loggedOut();\n    this.isloggedIn.next(this._user.isLoggedIn);\n    this._routes.navigate(['login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../model/user';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class UserService {\n  isLoggedIn:boolean = false;\n  private _user:User = new User();\n\n  constructor() {\n    this._init();\n  }\n\n  private _init(){\n    try {\n      this.isLoggedIn = (sessionStorage.isLoggedIn && sessionStorage.isLoggedIn === \"true\") || false;\n      if(this.isLoggedIn) {\n        this._user.deserialize(JSON.parse(sessionStorage.user));\n      }\n    } catch(e) {\n      throw new Error(' Unable to access session storage');\n    }\n  }\n\n  loggedIn(userInfo:User) {\n    this.user = userInfo;\n    sessionStorage.isLoggedIn = true;\n    this.isLoggedIn = true;\n  }\n\n  loggedOut() {\n    sessionStorage.clear();\n    this.isLoggedIn = false;\n  }\n\n  set user(userInfo:User) {\n    this._user.deserialize(userInfo);\n    sessionStorage.setItem('user', JSON.stringify(userInfo));\n  }\n\n  get user() {\n    return _.cloneDeep(this._user);\n  }\n\n}\n","import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\n\r\n\r\nexport abstract class BaseComponent {\r\n  formSubmitAttempt: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  abstract formName: string;\r\n  abstract save();\r\n\r\n  onSubmit() {\r\n    if (this[this.formName].valid) {\r\n      this.formSubmitAttempt.next(false);\r\n      this.save();\r\n    } else {\r\n      this.formSubmitAttempt.next(true);\r\n    }\r\n  }\r\n}\r\n","export * from './loader.component';\r\nexport * from './loader.service';\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { LoaderService, LoaderState } from './loader.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'mvp-loader',\r\n  templateUrl: 'loader.component.html'\r\n})\r\n\r\nexport class LoaderComponent implements OnInit, OnDestroy {\r\n\r\n  show = false;\r\n  private subscription: Subscription;\r\n\r\n  constructor(private loaderService: LoaderService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.loaderService.loaderState\r\n      .subscribe((state: LoaderState) => {\r\n        this.show = state.show;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface LoaderState {\r\n  show: boolean;\r\n}\r\n\r\n@Injectable()\r\n\r\nexport class LoaderService {\r\n  /**\r\n   * Number of pending requests\r\n   * @private\r\n   */\r\n  private _pendingRequests = 0;\r\n  private loaderSubject = new Subject<LoaderState>();\r\n\r\n  loaderState = this.loaderSubject.asObservable();\r\n\r\n  show() {\r\n    this._pendingRequests++;\r\n    if (1 === this._pendingRequests) {\r\n      this.loaderSubject.next(<LoaderState>{ show: true });\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this._pendingRequests--;\r\n    if (0 === this._pendingRequests) {\r\n      this.loaderSubject.next(<LoaderState>{ show: false });\r\n    }\r\n  }\r\n}\r\n","import { IServiceConfig, SERVICE_NAME, HTTP_METHODS } from '../model/service';\r\n\r\nexport const serviceInfo: IServiceConfig = {\r\n  [SERVICE_NAME.AUTHENTICATE_USER]: {\r\n    method: HTTP_METHODS.POST,\r\n    operationName: 'authenticateUser',\r\n    version: '1.0.0'\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { httpInterceptorProviders } from './http-interceptors';\r\nimport { LoaderComponent, LoaderService } from './components/loader';\r\nimport { ErrTextComponent, ValidationService } from './validators';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent, FooterComponent, LoaderComponent, ErrTextComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoaderComponent,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    ErrTextComponent\r\n  ],\r\n  providers:[ LoaderService, ValidationService, httpInterceptorProviders ]\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { LoaderService } from '../components/loader';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private loader: LoaderService) { }\r\n\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.loader.show();\r\n    return next.handle(req).pipe(\r\n      finalize(() => {\r\n        this.loader.hide();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { HTTP_METHODS } from './../model/service';\r\nimport { serviceInfo } from './../config/service-info';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { IServiceInfo } from '../model/service';\r\n\r\n\r\n@Injectable()\r\nexport class ServiceInterceptor implements HttpInterceptor {\r\n\r\n  private _init(serviceName: string): IServiceInfo {\r\n    if (_.has(serviceInfo, serviceName)) {\r\n      return {\r\n        ..._.cloneDeep(_.get(serviceInfo, serviceName)),\r\n        serviceName: serviceName\r\n      };\r\n    }\r\n  }\r\n\r\n  private _getMethod(config: IServiceInfo) {\r\n    return environment.loadFromAsset ? HTTP_METHODS.GET : config.method;\r\n  }\r\n\r\n  private _getUrl(reqUrl: string, config: IServiceInfo) {\r\n    const endpoint = environment.loadFromAsset ? config.operationName + '.json' : config.operationName+'/'+config.version;\r\n    return `${environment.baseUrl}${endpoint}`;\r\n  }\r\n\r\n  private _getHeaders(config: IServiceInfo) {\r\n    const defaultHeaders = {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    };\r\n    // if (config.isAuthenticated && sessionStorage.getItem('authToken')) {\r\n    //   defaultHeaders['authToken'] = sessionStorage.getItem('authToken');\r\n    // }\r\n    return defaultHeaders;\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    const config = this._init(req.url);\r\n    if (!_.isEmpty(config)) {\r\n      const apiReq = req.clone({\r\n        method: this._getMethod(config),\r\n        url: this._getUrl(req.url as any, config),\r\n        setHeaders: this._getHeaders(config)\r\n      });\r\n      return next.handle(apiReq)\r\n        .pipe(\r\n          map(res => this.handleResponse(res, config)),\r\n          catchError((e) => {\r\n            throw e;\r\n          })\r\n        );\r\n    }\r\n    return next.handle(req);\r\n  }\r\n\r\n  private _isSuccess(data) {\r\n    return _.has(data, 'statusCode') && data.statusCode === '0000';\r\n  }\r\n\r\n  private _getNewResponse(res, result) {\r\n    return new HttpResponse({\r\n      body: result,\r\n      headers: res.headers,\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      url: res.url\r\n    });\r\n  }\r\n\r\n\r\n  protected handleResponse(res, service: IServiceInfo) {\r\n    if (res instanceof HttpResponse) {\r\n      const result: any = res.body;\r\n      if (this._isSuccess(result)) {\r\n        return this._getNewResponse(res, result.details || result);\r\n      } else {\r\n        this._returnError(result);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  private _returnError(data) {\r\n    throw new HttpErrorResponse({\r\n      error: _.get(data, 'details.message', 'Error'),\r\n      status: _.get(data, 'header.statusCode'),\r\n      statusText: _.get(data, 'header.statusDescription')\r\n    });\r\n  }\r\n}\r\n","\r\nexport enum HTTP_METHODS {\r\n  POST = 'post',\r\n  PATCH = 'patch',\r\n  GET = 'get',\r\n  DELETE = 'delete',\r\n  PUT = 'put'\r\n}\r\n\r\nexport interface IServiceInfo {\r\n  method: HTTP_METHODS;\r\n  operationName: string;\r\n  version: string;\r\n}\r\n\r\nexport enum SERVICE_NAME {\r\n  AUTHENTICATE_USER = 'authenticateUser',\r\n}\r\n\r\nexport type IServiceConfig = {\r\n  [key in SERVICE_NAME]: IServiceInfo;\r\n};\r\n\r\n","<div *ngIf=\"isVisible\" class=\"d-block invalid-feedback\">{{ message }}</div>\r\n","import { Component, OnInit, ElementRef, Input } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ValidationService } from '../validation.service';\r\n\r\n@Component({\r\n  selector: 'mvp-err-text',\r\n  templateUrl: './err-text.component.html',\r\n  styleUrls: ['./err-text.component.css']\r\n})\r\nexport class ErrTextComponent implements OnInit {\r\n  isVisible = true;\r\n  private _submitted: boolean;\r\n  private _curentElem: any;\r\n  private _errors: any;\r\n  message: string;\r\n\r\n  @Input() private control: AbstractControl;\r\n  @Input() submitted: BehaviorSubject<boolean>;\r\n\r\n  constructor(elRef: ElementRef, private _validation: ValidationService) {\r\n    this._curentElem = elRef.nativeElement.parentElement.querySelector('input, select, textarea');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.control.statusChanges.pipe(distinctUntilChanged()).subscribe(state => {\r\n      this.setVisibilty();\r\n    });\r\n    this.control.valueChanges.subscribe(val => {\r\n      if (!_.isEqual(this._errors, this.control.errors)) {\r\n        this.setErrorMsg();\r\n      }\r\n    });\r\n    this.submitted.subscribe(value => {\r\n      this._submitted = value;\r\n      this.setVisibilty();\r\n    });\r\n  }\r\n\r\n  setVisibilty() {\r\n    const hasError = this.control && this.control.errors && this._submitted;\r\n    if (this._curentElem && this.control) {\r\n      if (hasError) {\r\n        this._curentElem.classList.add('is-invalid');\r\n      } else {\r\n        this._curentElem.classList.remove('is-invalid');\r\n      }\r\n    }\r\n    this.isVisible = hasError;\r\n    this.setErrorMsg();\r\n  }\r\n\r\n  setErrorMsg() {\r\n    this._errors = this.control.errors;\r\n    this.message = this._validation.getErrorMsg(this.control);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class ValidationService {\r\n\r\n  private readonly _errorMessages = {\r\n    required: (name) => `${name} is required`,\r\n    minlength: (name, data) => `${name} must have minimum ${data.requiredLength} characters`,\r\n    maxlength: (name, data) => `${name} must have maximum ${data.requiredLength} characters`\r\n  };\r\n\r\n  getErrorMsg(formControl: AbstractControl) {\r\n    if (formControl.errors) {\r\n      const firstRule = _.head(Object.keys(formControl.errors));\r\n      const displayControlName = this.getControlName(formControl);\r\n      return (this._errorMessages[firstRule] &&\r\n        this._errorMessages[firstRule](displayControlName, formControl.errors[firstRule])) || 'Invalid ' + displayControlName;\r\n    }\r\n  }\r\n\r\n  getControlName(formControl: AbstractControl) {\r\n    return _.startCase(this._getControlName(formControl));\r\n  }\r\n\r\n  private _getControlName(control: AbstractControl): string | null {\r\n    const group = <FormGroup>control.parent;\r\n    if (!group) {\r\n      return null;\r\n    }\r\n    let name: string;\r\n    Object.keys(group.controls).forEach(key => {\r\n      const childControl = group.get(key);\r\n      if (childControl !== control) {\r\n        return;\r\n      }\r\n      name = key;\r\n    });\r\n    return name;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  loadFromAsset: true,\r\n  baseUrl: '/assets/data/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}