{"version":3,"sources":["webpack:///./src/app/modules/featured/appointments/components/appointment-confirmation/appointment-confirmation.component.html","webpack:///./src/app/modules/featured/appointments/components/book-appointment/book-appointment.component.html","webpack:///./src/app/modules/featured/appointments/components/my-appointments/my-appointments.component.html","webpack:///./src/app/modules/featured/appointments/appointments-routing.module.ts","webpack:///./src/app/modules/featured/appointments/appointments.module.ts","webpack:///./src/app/modules/featured/appointments/components/appointment-confirmation/appointment-confirmation.component.css","webpack:///./src/app/modules/featured/appointments/components/appointment-confirmation/appointment-confirmation.component.ts","webpack:///./src/app/modules/featured/appointments/components/book-appointment/book-appointment.component.css","webpack:///./src/app/modules/featured/appointments/components/book-appointment/book-appointment.component.ts","webpack:///./src/app/modules/featured/appointments/components/my-appointments/my-appointments.component.css","webpack:///./src/app/modules/featured/appointments/components/my-appointments/my-appointments.component.ts","webpack:///./src/app/modules/featured/appointments/model.ts"],"names":[],"mappings":"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","file":"modules-featured-appointments-appointments-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"hasBanner\\\">\\r\\n  <h4 class=\\\"alert-heading\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <p>\\r\\n        <i class=\\\"far fa-check-circle fa-2x fas-primary\\\"></i>\\r\\n      </p>\\r\\n    </div>\\r\\n  </h4>\\r\\n  <p class=\\\"mb-0\\\">Your virtual connect with your\\r\\n    <strong>Dr. {{ appointment.doctorID }}</strong> on\\r\\n    <strong>{{  appointment.appointmentDate }}</strong> @\\r\\n    <strong>{{ appointment.appointmentTime }}</strong> has been scheduled. You will receive an email shortly on how to\\r\\n    connect.</p>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  <h4 class=\\\"alert-heading\\\">Error!</h4>\\r\\n  <p class=\\\"mb-0\\\">Service error, Kindly try again later</p>\\r\\n</div>\\r\\n<form class=\\\"form-horizontal\\\" [formGroup]=\\\"appointmentForm\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\r\\n  <fieldset>\\r\\n    <legend class=\\\"border-bottom mb-4\\\">Schedule a virtual connect with Physician</legend>\\r\\n    <div class=\\\"row form-group\\\" *ngIf=\\\"!isCounsellor\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\" for=\\\"specialityType\\\">Specialist</label>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <select id=\\\"specialityType\\\" name=\\\"specialityType\\\" (change)=\\\"specialistChanged()\\\" class=\\\"form-control\\\" formControlName=\\\"specialityType\\\">\\r\\n          <option value=\\\"\\\">Choose Specialist</option>\\r\\n          <option *ngFor=\\\"let eachType of specialityTypes\\\" [value]=\\\"eachType\\\">{{ eachType }}</option>\\r\\n        </select>\\r\\n        <mvp-err-text [control]=\\\"appointmentForm.controls.specialityType\\\" [submitted]=\\\"formSubmitAttempt\\\"></mvp-err-text>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row form-group\\\">\\r\\n      <label class=\\\"col-md-2 control-label\\\" for=\\\"doctorID\\\">Physician</label>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <select id=\\\"doctorID\\\" name=\\\"doctorID\\\" class=\\\"form-control\\\" (change)=\\\"doctorChanged()\\\" formControlName=\\\"doctorID\\\">\\r\\n          <option value=\\\"\\\">Choose Physician</option>\\r\\n          <option *ngFor=\\\"let eachDoctor of currentDoctorList\\\" [value]=\\\"eachDoctor.doctorID\\\">{{ eachDoctor.doctorName }}</option>\\r\\n        </select>\\r\\n        <mvp-err-text [control]=\\\"appointmentForm.controls.doctorID\\\" [submitted]=\\\"formSubmitAttempt\\\"></mvp-err-text>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\\"isDateEnabled\\\">\\r\\n      <div class=\\\"row form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"appointmentDate\\\">Date</label>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" [markDisabled]=\\\"isDisabled\\\" [minDate]=\\\"minDate\\\" [maxDate]=\\\"maxDate\\\"\\r\\n              id=\\\"appointmentDate\\\" name=\\\"appointmentDate\\\" formControlName=\\\"appointmentDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button class=\\\"btn btn-outline-primary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                <i class=\\\"fas fa-calendar\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <mvp-err-text [control]=\\\"appointmentForm.controls.appointmentDate\\\" [submitted]=\\\"formSubmitAttempt\\\"></mvp-err-text>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row form-group\\\">\\r\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"appointmentTime\\\">Time Slots</label>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col pr-0\\\">\\r\\n              <label class=\\\"radio-inline p-2 border mr-2 selected\\\" *ngFor=\\\"let eachSlot of availableTimeSlot| keyvalue\\\" for=\\\"appointmentTime-{{eachSlot.value}}\\\">\\r\\n                <input type=\\\"radio\\\" name=\\\"appointmentTime\\\" id=\\\"appointmentTime-{{eachSlot.value}}\\\" [value]=\\\"eachSlot.value\\\" formControlName=\\\"appointmentTime\\\"> {{eachSlot.key}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <mvp-err-text [control]=\\\"appointmentForm.controls.appointmentTime\\\" [submitted]=\\\"formSubmitAttempt\\\"></mvp-err-text>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <hr class=\\\"my-4\\\">\\r\\n    <div class=\\\"row form-group\\\">\\r\\n      <div class=\\\"col-12 col-md-3 offset-md-2\\\">\\r\\n        <button class=\\\"btn btn-primary btn-block\\\">Schedule</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 col-md-2\\\">\\r\\n        <button class=\\\"btn btn-link btn-block ml-md-3 mt-3 mt-md-0\\\" type=\\\"button\\\"  routerLink=\\\"/dashboard\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</form>\\r\\n\"","module.exports = \"<!-- <div class=\\\"row justify-content-end mb-3 mr-md-2\\\">\\r\\n  <div class=\\\"col-12 col-lg-4 col-md-6 border\\\">\\r\\n    <div class=\\\"row pt-3 pb-3\\\">\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <h5 class=\\\"mt-0 mb-1\\\">Appointments Today</h5>\\r\\n        <span>05</span>\\r\\n      </div>\\r\\n      <div class=\\\"col-2 align-self-center\\\">\\r\\n        <i class=\\\"fas fa-calendar-alt fas-primary\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n<mvp-appointment-confirmation></mvp-appointment-confirmation>\\r\\n<div class=\\\"row justify-content-end\\\">\\r\\n  <div class=\\\"col-12 col-md-6 col-lg-4\\\">\\r\\n    <div class=\\\"card text-white bg-primary mb-3\\\">\\r\\n      <div class=\\\"card-header text-center\\\">\\r\\n        <h4 class=\\\"card-title\\\">\\r\\n          <i class=\\\"fas fa-calendar-alt\\\"></i> Appointments Today</h4>\\r\\n      </div>\\r\\n      <div class=\\\"card-body py-2\\\">\\r\\n        <p class=\\\"card-text display-4 text-center font-weight-bold\\\">{{ todaysAppointmentCount }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12 px-md-4 px-0\\\">\\r\\n    <h1 class=\\\"mb-3\\\">Appointments</h1>\\r\\n    <ng-container *ngIf=\\\"appointmentDetails.length > 0; else noAppointmentsBlock\\\">\\r\\n      <ngb-tabset>\\r\\n        <ngb-tab *ngFor=\\\"let appointmentsGroup of appointmentDetails\\\">\\r\\n          <ng-template ngbTabTitle>\\r\\n            <p>\\r\\n              <strong>{{ appointmentsGroup.appointmentDay }}</strong>\\r\\n            </p>\\r\\n            <p>\\r\\n              <span>{{ appointmentsGroup.appointmentDate }}</span>\\r\\n            </p>\\r\\n          </ng-template>\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <table class=\\\"table table-striped table-bordered\\\">\\r\\n                <tbody>\\r\\n                  <ng-container *ngIf=\\\"appointmentsGroup.appointments.length > 0; else noAppointmentsFoundTemplate\\\">\\r\\n                    <tr *ngFor=\\\"let appointment of appointmentsGroup.appointments\\\">\\r\\n                      <th scope=\\\"row\\\">Jerry Matt</th>\\r\\n                      <td>{{ appointment.appointmentDate }} {{ appointment.appointmentTime }}</td>\\r\\n                      <td>\\r\\n                        <p>123-123-1234\\r\\n                          <p>\\r\\n                            <p>Phone number</p>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <p>New York\\r\\n                          <p>\\r\\n                            <p>Location</p>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Connect</button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                  <ng-template #noAppointmentsFoundTemplate>\\r\\n                    <tr>\\r\\n                      <th colspan=\\\"4\\\">No Appointments found.</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n      </ngb-tabset>\\r\\n    </ng-container>\\r\\n    <ng-template #noAppointmentsBlock>\\r\\n      <p>No Appointments found</p>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MyAppointmentsComponent } from './components/my-appointments/my-appointments.component';\r\nimport { BookAppointmentComponent } from './components/book-appointment/book-appointment.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'my-appointments', component: MyAppointmentsComponent },\r\n  { path: 'book-appointment', component: BookAppointmentComponent },\r\n  { path: '', redirectTo: 'my-appointments', pathMatch: 'full' },\r\n  { path: '**', redirectTo: 'my-appointments' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppointmentsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbTabsetModule, NgbDropdownModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppointmentsRoutingModule } from './appointments-routing.module';\r\nimport { MyAppointmentsComponent } from './components/my-appointments/my-appointments.component';\r\nimport { BookAppointmentComponent } from './components/book-appointment/book-appointment.component';\r\nimport { AppointmentConfirmationComponent } from './components/appointment-confirmation/appointment-confirmation.component';\r\nimport { CoreModule } from '../../core/core.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [MyAppointmentsComponent, BookAppointmentComponent, AppointmentConfirmationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    NgbTabsetModule,\r\n    NgbDropdownModule,\r\n    AppointmentsRoutingModule\r\n  ]\r\n})\r\nexport class AppointmentsModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2Zyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9mZWF0dXJlZC9hcHBvaW50bWVudHMvY29tcG9uZW50cy9hcHBvaW50bWVudC1jb25maXJtYXRpb24vYXBwb2ludG1lbnQtY29uZmlybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { SessionService, SESSION_KEY } from './../../../../core/services/session.service';\r\nimport { Component } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'mvp-appointment-confirmation',\r\n  templateUrl: './appointment-confirmation.component.html',\r\n  styleUrls: ['./appointment-confirmation.component.css']\r\n})\r\nexport class AppointmentConfirmationComponent {\r\n  appointment = {\r\n    doctorID : 'Thomas',\r\n    appointmentDate: '07/15/2019',\r\n    appointmentTime: '11:00 AM'\r\n  };\r\n  hasBanner = false;\r\n  constructor(private _session:SessionService) {\r\n    this._session.select(SESSION_KEY.DOCTOR_LIST).pipe(first()).subscribe(data => {\r\n      this.hasBanner = data.newAppointmentBanner;\r\n    })\r\n    if(this.hasBanner) {\r\n      this._session.setState(SESSION_KEY.DOCTOR_LIST, {\r\n        newAppointmentBanner: false\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2Zyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9mZWF0dXJlZC9hcHBvaW50bWVudHMvY29tcG9uZW50cy9ib29rLWFwcG9pbnRtZW50L2Jvb2stYXBwb2ludG1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { User } from './../../../../core/model/user';\r\nimport { TIME_SLOTS, COUNSELLOR } from './../../../../core/model/doctor-list';\r\nimport { ApiService } from './../../../../core/services/api.service';\r\nimport { SessionService, SESSION_KEY } from './../../../../core/services/session.service';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { BaseComponent } from '../../../../core/components/base.component';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbDate, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { IDoctorListState, IDoctorLists } from '../../../../core/model/doctor-list';\r\nimport * as _ from 'lodash';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './book-appointment.component.html',\r\n  styleUrls: ['./book-appointment.component.css']\r\n})\r\nexport class BookAppointmentComponent extends BaseComponent implements OnDestroy {\r\n  formName = 'appointmentForm';\r\n  appointmentForm = this._fb.group({\r\n    specialityType: ['', Validators.required],\r\n    doctorID: ['', Validators.required],\r\n    appointmentDate: ['', Validators.required],\r\n    appointmentTime: ['', Validators.required]\r\n  });\r\n  minDate = this._calendar.getToday();\r\n  maxDate = this._calendar.getNext(this.minDate, 'd', 30);\r\n  specialityTypes = [];\r\n  doctorLists: IDoctorLists = {};\r\n  bookedTimeSlots = {};\r\n  timeSlots = TIME_SLOTS;\r\n  private _sessionSub$: Subscription;\r\n  error = false;\r\n  isCounsellor = false;\r\n  constructor(private _fb: FormBuilder, private _session: SessionService, private _calendar: NgbCalendar, private _api: ApiService, private _route: ActivatedRoute, private _router: Router) {\r\n    super();\r\n    this._sessionSub$ = this._session.select(SESSION_KEY.DOCTOR_LIST).subscribe((data: IDoctorListState) => {\r\n      this.specialityTypes = data.specialityTypes;\r\n      this.doctorLists = data.doctorList;\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this._route.queryParamMap.subscribe(queryParams => {\r\n      const specialityType =queryParams.get(\"type\");\r\n      if(specialityType && specialityType === COUNSELLOR) {\r\n        this.isCounsellor = true;\r\n        this.appointmentForm.controls.specialityType.setValue(COUNSELLOR);\r\n      } else {\r\n        this.isCounsellor = false;\r\n        this.appointmentForm.controls.specialityType.setValue('');\r\n      }\r\n      this.specialistChanged();\r\n    })\r\n  }\r\n  save() {\r\n    const formValue = this.appointmentForm.value;\r\n    const payload = {\r\n      doctorID: formValue.doctorID,\r\n      appointmentID: formValue.doctorID,\r\n      memberID: formValue.doctorID,\r\n      appointmentDate: this.formatDate(formValue.appointmentDate),\r\n      appointmentTime: formValue.appointmentTime\r\n    }\r\n    this._api.bookAppointment(payload).subscribe(() => {\r\n      this.error = false;\r\n      this._session.setState(SESSION_KEY.DOCTOR_LIST, {\r\n        newAppointmentBanner: true\r\n      });\r\n      this._session.setState(SESSION_KEY.USER, {\r\n        appointmentDetails: [ _.pick(payload, ['appointmentID', 'appointmentDate', 'appointmentTime'])]\r\n      }, true);\r\n      this._router.navigate(['/appointments/my-appointments']);\r\n    }, () => {\r\n      this.error = true;\r\n    });\r\n  }\r\n\r\n  isDisabled = (date: NgbDate) => {\r\n    const dateFormat = this.formatDate(date);\r\n    if (_.has(this.doctorTimeSlot, dateFormat)) {\r\n      return this.doctorTimeSlot[dateFormat].length === 4;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get doctorTimeSlot() {\r\n    return _.get(this.bookedTimeSlots, this.appointmentForm.value.doctorID, {});\r\n  }\r\n\r\n  formatDate(date: NgbDate){\r\n    return `${('0' + date.month).slice(-2)}/${('0' + date.day).slice(-2)}/${date.year}`;\r\n  }\r\n\r\n  get availableTimeSlot() {\r\n    const selectedDate = this.appointmentForm.value.appointmentDate;\r\n    if(!_.isEmpty(this.doctorTimeSlot) && !_.isEmpty(selectedDate) && _.has(this.doctorTimeSlot, this.formatDate(selectedDate))) {\r\n      const availableTimeSlot = _.filter(TIME_SLOTS, (eachSlot) => {\r\n        return _.find(this.doctorTimeSlot[this.formatDate(selectedDate)],(bookedSlot) => bookedSlot.timeSlot === eachSlot);\r\n      });\r\n      return _.omitBy(this.timeSlots ,(eachSlot) => _.includes(availableTimeSlot,eachSlot))\r\n    }\r\n    return this.timeSlots;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._sessionSub$.unsubscribe();\r\n  }\r\n\r\n  get currentDoctorList() {\r\n    return this.doctorLists[this.appointmentForm.value.specialityType] || [];\r\n  }\r\n\r\n  specialistChanged() {\r\n    const specialityType = this.appointmentForm.value.specialityType;\r\n    if (!_.isEmpty(specialityType) && !this.doctorLists[specialityType]) {\r\n      this._api.getDoctorList(specialityType).subscribe()\r\n    }\r\n    this.appointmentForm.controls.doctorID.setValue(\"\");\r\n  }\r\n\r\n  get isDateEnabled() {\r\n    return this.appointmentForm.value.doctorID !== \"\";\r\n  }\r\n\r\n  doctorChanged() {\r\n    this._api.getTimeSlots(this.appointmentForm.value.specialityType, this.appointmentForm.value.doctorID).subscribe((appointments) => {\r\n      this.bookedTimeSlots[this.appointmentForm.value.doctorID] = _.groupBy(appointments, 'appointmentDate');\r\n      console.log(this.bookedTimeSlots);\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2Zyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9mZWF0dXJlZC9hcHBvaW50bWVudHMvY29tcG9uZW50cy9teS1hcHBvaW50bWVudHMvbXktYXBwb2ludG1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { SessionService, SESSION_KEY } from './../../../../core/services/session.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\nimport * as _ from 'lodash';\r\nimport { AppointmentGroup, IDay, EDays } from '../../model';\r\nimport { IAppointmentDetail } from '../../../../core/model/user';\r\n\r\n@Component({\r\n  selector: 'mvp-my-appointments',\r\n  templateUrl: './my-appointments.component.html',\r\n  styleUrls: ['./my-appointments.component.css']\r\n})\r\nexport class MyAppointmentsComponent implements OnDestroy {\r\n  appointmentDetails: AppointmentGroup[] = [];\r\n  private _sessionSub$: Subscription;\r\n  constructor(private _session: SessionService) {\r\n    this._sessionSub$ = this._session.select(SESSION_KEY.USER).subscribe(data => {\r\n      this.appointmentDetails = this._groupAppointments(data.appointmentDetails);\r\n    })\r\n  }\r\n\r\n  private _groupAppointments(appointmentDetails: IAppointmentDetail[]): AppointmentGroup[] {\r\n    const appointmentGroups = [];\r\n    this._sevenDates.forEach((val) => {\r\n      appointmentGroups.push({\r\n        appointmentDate: val.date,\r\n        appointments: _.filter(appointmentDetails, { appointmentDate: val.date }),\r\n        appointmentDay: val.day\r\n      });\r\n    });\r\n    return appointmentGroups;\r\n  }\r\n\r\n  get todaysAppointmentCount(): number {\r\n    return this.appointmentDetails.length > 0 ? this.appointmentDetails[0].appointments.length : 0;\r\n  }\r\n\r\n  private get _sevenDates(): IDay[] {\r\n    const startingDay = new Date();\r\n    const thisDay = new Date();\r\n    const sevenDates: IDay[] = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      thisDay.setDate(startingDay.getDate() + i);\r\n      const currentMonth = thisDay.getMonth() + 1;\r\n      sevenDates.push({\r\n        date: `${currentMonth > 10 ? currentMonth : '0' + currentMonth}/${thisDay.getDate() > 10 ? thisDay.getDate() : '0' + thisDay.getDate()}/${thisDay.getFullYear()}`,\r\n        day: EDays[thisDay.getDay()]\r\n      });\r\n    }\r\n    return sevenDates;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._sessionSub$.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { IAppointmentDetail } from '../../core/model/user';\r\n\r\nexport interface AppointmentGroup {\r\n    appointmentDate: string;\r\n    appointments: IAppointmentDetail[];\r\n    appointmentDay: string;\r\n}\r\n\r\nexport interface IDay {\r\n    date: string;\r\n    day: string;\r\n}\r\n\r\nexport enum EDays {\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n}"],"sourceRoot":""}